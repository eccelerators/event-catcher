-- Copyright (C) 2024 Eccelerators GmbH
-- 
-- This code was generated by:
--
-- HxS Compiler v0.0.0-0000000
-- SimStm Extension for HxS 1.0.12-d6fdbb9b
-- 
-- Further information at https://eccelerators.com/hxs
-- 
-- Changes to this file may cause incorrect behavior and will be lost if the
-- code is regenerated.
    
    
-- Eccelerators.Library.IP

const EventCatcherIfcAddressBusWidth 4
const EventCatcherIfcDataBusWidth 32

var EventCatcherIfcAddress 0
bus EventCatcherIfcBus 0

var EventCatcherBlkAddress 0x0
const EventCatcherBlkSize 0xC

var EventMaskRegAddress 0x0
const EventMaskRegWidth 32

const MaskMask 0x0000000F
const MaskPosition 0
const MaskWidth 4
const EventEnabledMVal 0x00000001
const EventDisabledMVal 0x00000000
const MaskBusResetMRstVal 0x00000000

var EventCatchRegAddress 0x0
const EventCatchRegWidth 32

const CatchMask 0x0000000F
const CatchPosition 0
const CatchWidth 4
const CatchedMVal 0x00000001
const NotCatchedMVal 0x00000000
const Catch_ConfirmedMVal 0x00000001
const Catch_InEffectiveMVal 0x00000000
const Catch_AsyncMRstVal 0x00000000

var EventOverrunRegAddress 0x0
const EventOverrunRegWidth 32

const OverrunMask 0x0000000F
const OverrunPosition 0
const OverrunWidth 4
const HappenedMVal 0x00000001
const NotHappenedMVal 0x00000000
const Overrun_ConfirmedMVal 0x00000001
const Overrun_InEffectiveMVal 0x00000000
const Overrun_AsyncMRstVal 0x00000000


EventCatcherIfcInit:
proc
    equ EventCatcherBlkAddress 0x0
    add EventCatcherBlkAddress $EventCatcherIfcAddress
    call $EventCatcherBlkInit
end proc

EventCatcherBlkInit:
proc
    equ EventMaskRegAddress 0x0
    add EventMaskRegAddress $EventCatcherBlkAddress
    equ EventCatchRegAddress 0x4
    add EventCatchRegAddress $EventCatcherBlkAddress
    equ EventOverrunRegAddress 0x8
    add EventOverrunRegAddress $EventCatcherBlkAddress
end proc

var RvalEventCatcherBlk_BusReset 0

ResetTestEventCatcherBlkByBusReset:
proc
    bus verify EventCatcherIfcBus 32 $EventMaskRegAddress RvalEventCatcherBlk_BusReset 0 $MaskMask
end proc


var RbvlEventCatcherBlk 0

ReadBackTestEventCatcherBlk:
proc
    bus write EventCatcherIfcBus 32 $EventMaskRegAddress 0x00000007
    bus verify EventCatcherIfcBus 32 $EventMaskRegAddress RbvlEventCatcherBlk 0x00000007 $MaskMask
    bus write EventCatcherIfcBus 32 $EventMaskRegAddress 0x0000000B
    bus verify EventCatcherIfcBus 32 $EventMaskRegAddress RbvlEventCatcherBlk 0x0000000B $MaskMask
    bus write EventCatcherIfcBus 32 $EventMaskRegAddress 0x0000000D
    bus verify EventCatcherIfcBus 32 $EventMaskRegAddress RbvlEventCatcherBlk 0x0000000D $MaskMask
    bus write EventCatcherIfcBus 32 $EventMaskRegAddress 0x0000000E
    bus verify EventCatcherIfcBus 32 $EventMaskRegAddress RbvlEventCatcherBlk 0x0000000E $MaskMask
    bus write EventCatcherIfcBus 32 $EventMaskRegAddress 0x00000008
    bus verify EventCatcherIfcBus 32 $EventMaskRegAddress RbvlEventCatcherBlk 0x00000008 $MaskMask
    bus write EventCatcherIfcBus 32 $EventMaskRegAddress 0x00000004
    bus verify EventCatcherIfcBus 32 $EventMaskRegAddress RbvlEventCatcherBlk 0x00000004 $MaskMask
    bus write EventCatcherIfcBus 32 $EventMaskRegAddress 0x00000002
    bus verify EventCatcherIfcBus 32 $EventMaskRegAddress RbvlEventCatcherBlk 0x00000002 $MaskMask
    bus write EventCatcherIfcBus 32 $EventMaskRegAddress 0x00000001
    bus verify EventCatcherIfcBus 32 $EventMaskRegAddress RbvlEventCatcherBlk 0x00000001 $MaskMask
end proc
